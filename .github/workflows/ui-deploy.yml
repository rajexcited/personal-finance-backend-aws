name: UI Deploy to AWS

on:
  repository_dispatch:
    types:
      - on-demand-deploy-ui

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  show_client_payload:
    name: Print client payload of dispatch event
    runs-on: ubuntu-latest
    steps:
      - name: print artifact details
        run: |
          artifact_id=${{ github.event.client_payload.artifact_id }}
          echo "Artifact Id: $artifact_id"
          artifact_url=${{ github.event.client_payload.artifact_url }}
          echo "Artifact Url: $artifact_url"
      - name: print artifact repo and run
        run: |
          ui_repo_run_id=${{ github.event.client_payload.repo_run_id }}
          echo "UI Repository Run Id: $ui_repo_run_id where artifact can be found"
          ui_repository=${{ github.event.client_payload.ui_repository }}
          echo "UI Repository: $ui_repository"

  awsauth:
    name: Verify AWS Access
    runs-on: ubuntu-latest
    environment: aws-infra-master
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          # setup cicd role through instructions from aws-manual branch.
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: cdkSession

  diff:
    name: UI stack diff
    runs-on: ubuntu-latest
    needs:
      - awsauth
    environment: aws-infra-master
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node Latest
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - run: mkdir -p dist/lambda_layer/nodejs
      - run: mkdir -p dist/ui
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          # setup cicd role through instructions from aws-manual branch.
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: cdkSession
      - name: cdk diff
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "diff"
          actions_comment: false
          cdk_args: "MyFinanceUiDeployStack"
        env:
          INFRA_ENV: ${{ vars.INFRA_ENV }}

  deployment:
    name: deploy infra stack
    runs-on: ubuntu-latest
    needs:
      - show_client_payload
      - awsauth
      - diff
    environment: aws-infra-master
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node Latest
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - run: mkdir -p dist/lambda_layer/nodejs
      - run: mkdir -p dist/ui
      - name: download UI artifact
        uses: actions/download-artifact@v4
        with:
          path: dist/ui/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.ui_repository }}
          run-id: ${{ github.event.client_payload.repo_run_id }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          # setup cicd role through instructions from aws-manual branch.
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: cdkSession
      - name: cdk diff
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "deploy"
          actions_comment: false
          cdk_args: "MyFinanceUiDeployStack --exclusively --require-approval never"
        env:
          INFRA_ENV: ${{ vars.INFRA_ENV }}
